@App:name("TrackAnalizator")

@App:description('Analizing data from AnalizeService')

-- HTTP endpoint which listens for api request related events
@source(type='http', receiver.url='http://0.0.0.0:8006/track-analizator',
        basic.auth.enabled='false',
        @map(type='json',
        @attributes(speed = "speed", busCount = "busCount", recordId = "recordId")))
        define stream TrackInputStream 
            (speed int, busCount int, recordId string);
        
--HTTP sink to publish analizing result
@sink(type='http', publisher.url='http://192.168.1.58:5002/analytics-service', 
    method='POST', 
    headers='Content-type:application/json',
	basic.auth.enabled='false',
    @map(type='json'))
    define stream TrackOutputStream(RecordId string, Status string);
        
--@sink(type='log', prefix='LOGGER')
  --  define stream TrackOutputStream(recordId string, status string);
  
--Proccessing data from TrackInputStream
@info(name = 'ComplexIfElseQuery')
    from TrackInputStream
    select recordId as RecordId, 
    ifThenElse(speed > 20, 
        ifThenElse(busCount > 2, 'Danger', 'Warning'), 
        'Normal')
    as Status
insert into TrackOutputStream;