version: '3.4'

services:
    mongo:
        image: mongo
        restart: always
        environment:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example
        ports:
          - 27017:27017

    mongo-express:
        image: mongo-express
        restart: always
        ports:
          - 8081:8081
        environment:
          ME_CONFIG_MONGODB_ADMINUSERNAME: root
          ME_CONFIG_MONGODB_ADMINPASSWORD: example
        depends_on:
          - mongo  

    sensor_device_service:
        image: ${DOCKER_REGISTRY-}sensordeviceservice
        build:
            context: .
            dockerfile: IOT_Traffic_Tracker_Microservices/Dockerfile
        ports:
          - 5003:80

    data_service:
        image: ${DOCKER_REGISTRY-}data_service
        build:
            context: .
            dockerfile: Data_Service/Dockerfile
        environment:
          - "MongoDbSettings:ConnectionString=mongodb://root:example@mongo:27017"
        depends_on:
          - mongo
          - rabbitmq
        ports:
            - 5000:80


    commandservice:
        image: ${DOCKER_REGISTRY-}commandservice
        build:
            context: .
            dockerfile: CommandService\Dockerfile
        depends_on:
          - rabbitmq
        ports:
            - 5001:80

    analyticsservice:
        image: ${DOCKER_REGISTRY-}analyticsservice
        build:
            context: .
            dockerfile: AnalyticsService\Dockerfile
        depends_on:
          - rabbitmq
        ports:
            - 5002:80

    rabbitmq:
        container_name: rabbitmq
        ports:
            - 5672:5672
            - 15672:15672
        environment:
            - RABBITMQ_DEFAULT_USER=user
            - RABBITMQ_DEFAULT_PASS=password        
        image: rabbitmq:3-management



  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: APIGateway/Dockerfile

